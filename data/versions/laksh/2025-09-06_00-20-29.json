{
  "idea": "A ToDo List app with login/logout functionality.",
  "files": {
    "app.py": "import streamlit as st\nimport json\nfrom utils.helpers import load_todos, save_todos, login_user, logout_user\n\nst.title(\"To-Do List App\")\n\n# Load user data (replace with actual authentication mechanism in a real app)\nif \"user\" not in st.session_state:\n    st.session_state.user = None\n\nif st.session_state.user is None:\n    username = st.text_input(\"Username\")\n    password = st.text_input(\"Password\", type=\"password\")\n    if st.button(\"Login\"):\n        if login_user(username, password):  # Placeholder for authentication\n            st.session_state.user = username\n            st.success(f\"Welcome, {username}!\")\n            st.experimental_rerun()\nelse:\n    todos = load_todos(st.session_state.user)\n\n    new_todo = st.text_input(\"Add a new to-do:\")\n    if st.button(\"Add To-Do\"):\n        if new_todo:\n            todos.append(\n                {\"task\": new_todo, \"completed\": False, \"notes\": \"\", \"reminder\": \"\"}\n            )\n            save_todos(st.session_state.user, todos)\n            st.success(\"To-do added!\")\n            st.experimental_rerun()\n\n    st.subheader(\"Your To-Do List\")\n    for i, todo in enumerate(todos):\n        col1, col2, col3, col4 = st.columns([1, 2, 1, 1])\n        with col1:\n            todo[\"completed\"] = st.checkbox(\"Completed\", value=todo[\"completed\"])\n        with col2:\n            todo[\"task\"] = st.text_input(\"\", value=todo[\"task\"], key=f\"task_{i}\")\n        with col3:\n            todo[\"notes\"] = st.text_area(\n                \"Notes\", value=todo[\"notes\"], key=f\"notes_{i}\", height=30\n            )\n        with col4:\n            todo[\"reminder\"] = st.date_input(\n                \"Reminder\", value=todo.get(\"reminder\"), key=f\"reminder_{i}\"\n            )\n\n    if st.button(\"Save Changes\"):\n        save_todos(st.session_state.user, todos)\n        st.success(\"Changes saved!\")\n\n    if st.button(\"Logout\"):\n        logout_user()\n        st.success(\"Logged out!\")\n        st.experimental_rerun()\n",
    "utils/helpers.py": "import json\nimport os\n\n\ndef load_todos(username):\n    filepath = f\"data/{username}_todos.json\"\n    if os.path.exists(filepath):\n        with open(filepath, \"r\") as f:\n            try:\n                return json.load(f)\n            except json.JSONDecodeError:\n                return []\n    return []\n\n\ndef save_todos(username, todos):\n    os.makedirs(\"data\", exist_ok=True)\n    filepath = f\"data/{username}_todos.json\"\n    with open(filepath, \"w\") as f:\n        json.dump(todos, f, indent=4)\n\n\ndef login_user(username, password):\n    # Replace this with your actual authentication logic\n    # For this example, we'll just allow any username and password\n    return True\n\n\ndef logout_user():\n    # Clear session state\n    if \"user\" in st.session_state:\n        del st.session_state.user\n",
    "assets/__init__.py": "# This file can be empty or contain any assets you might need later.\n"
  },
  "timestamp": "2025-09-06_00-20-29"
}